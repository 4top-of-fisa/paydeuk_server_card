name: SonarQube

on:
  push:
    branches:
      - dev
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  setup-mysql:
    uses: ./.github/workflows/mysql-setting.yaml

  setup-redis:
    uses: ./.github/workflows/redis-setting.yaml

  build:
    name: Build and analyze
    needs: [ setup-mysql, setup-redis ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Start MySQL
        run: |
          docker run -d \
            --name mysql \
            -e MYSQL_ROOT_PASSWORD=${{ needs.setup-mysql.outputs.db-password }} \
            -e MYSQL_DATABASE=paydeuk_server_card \
            -p ${{ needs.setup-mysql.outputs.db-port }}:3306 \
            mysql:8

      - name: Wait for MySQL
        run: |
          for i in {30..0}; do
            docker exec mysql mysqladmin ping \
              -u${{ needs.setup-mysql.outputs.db-username }} \
              -p${{ needs.setup-mysql.outputs.db-password }} --silent && break
            echo "‚è≥ Waiting for MySQL... ($i)"
            sleep 2
          done

#      - name: Start Redis
#        run: |
#          docker run -d \
#            --name redis \
#            -e REDIS_PASSWORD=${{ needs.setup-redis.outputs.redis-password }} \
#            -p ${{ needs.setup-redis.outputs.redis-port }}:6379 \
#            redis:7 \
#            --requirepass ${{ needs.setup-redis.outputs.redis-password }}

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          MYSQL_HOST: ${{ needs.setup-mysql.outputs.db-host }}
          MYSQL_PORT: ${{ needs.setup-mysql.outputs.db-port }}
          MYSQL_USER: ${{ needs.setup-mysql.outputs.db-username }}
          MYSQL_PASSWORD: ${{ needs.setup-mysql.outputs.db-password }}
#          REDIS_HOST: ${{ needs.setup-redis.outputs.redis-host }}
#          REDIS_PORT: ${{ needs.setup-redis.outputs.redis-port }}
#          REDIS_PASSWORD: ${{ needs.setup-redis.outputs.redis-password }}
        run: ./gradlew build sonar --info
